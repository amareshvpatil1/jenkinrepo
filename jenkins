[ec2-user@ip-172-31-44-195 ~]$ history
    1  sedo yum update -y
    2  yum install
    3  pwd
    4  whoami
    5  sudo yum search "find"
    6  yum update -y
    7  sudo
    8  sedu -u
    9  sedu -su
   10  sedu -v -u
   11  yum install jenkins
   12  sedo yum install jenkeins
   13  sedo yum install jenkein
   14  sedo yum update
   15  sudo yum update –y
   16  history
   
   amareshvpat
   Rohi@7353

ec2-15-207-85-38.ap-south-1.compute.amazonaws.com
http://ec2-15-207-85-38.ap-south-1.compute.amazonaws.com:8080 

pass _ f2666cc930c64acb9033d0833c7fbd9e


Jenkins Credentials

User_Name : Devops_Admin
Password : Admin123  


Jenkins commands 

Download and install Jenkins
To download and install Jenkins:

To ensure that your software packages are up to date on your instance, use the following command to perform a quick software update:

[ec2-user ~]$ sudo yum update –y
Add the Jenkins repo using the following command:

[ec2-user ~]$ sudo wget -O /etc/yum.repos.d/jenkins.repo \
    https://pkg.jenkins.io/redhat-stable/jenkins.repo
Import a key file from Jenkins-CI to enable installation from the package:

[ec2-user ~]$ sudo rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io.key
[ec2-user ~]$ sudo yum upgrade
Install Jenkins:

[ec2-user ~]$ sudo yum install jenkins java-1.8.0-openjdk-devel -y
[ec2-user ~]$ sudo systemctl daemon-reload

sudo yum install jenkins -y

" To Encounter the Followng error 

"Error: Package: jenkins-2.319.1-1.1.noarch (jenkins)
Requires: daemonize
You could try using --skip-broken to work around the problem
You could try running: rpm -Va --nofiles --nodigest "" 

Use the following cmd :

sudo amazon-linux-extras install epel -y

sudo yum update -y

sudo yum install jenkins java-1.8.0-openjdk-devel

Start Jenkins as a service:

[ec2-user ~]$ sudo systemctl start jenkins

You can check the status of the Jenkins service using the command:

[ec2-user ~]$ sudo systemctl status jenkins

Stop Jenkins as a service:

sudo systemctl stop jenkins

################################################################################################################

[ec2-user@ip-172-31-44-195 mygit]$ git help
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           [--super-prefix=<path>] [--config-env=<name>=<envvar>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone             Clone a repository into a new directory
   init              Create an empty Git repository or reinitialize an existing                                                                              one

work on the current change (see also: git help everyday)
   add               Add file contents to the index
   mv                Move or rename a file, a directory, or a symlink
   restore           Restore working tree files
   rm                Remove files from the working tree and from the index
   sparse-checkout   Initialize and modify the sparse-checkout

examine the history and state (see also: git help revisions)
   bisect            Use binary search to find the commit that introduced a bug
   diff              Show changes between commits, commit and working tree, etc
   grep              Print lines matching a pattern
   log               Show commit logs
   show              Show various types of objects
   status            Show the working tree status

grow, mark and tweak your common history
   branch            List, create, or delete branches
   commit            Record changes to the repository
   merge             Join two or more development histories together
   rebase            Reapply commits on top of another base tip
   reset             Reset current HEAD to the specified state
   switch            Switch branches
   tag               Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch             Download objects and refs from another repository
   pull              Fetch from and integrate with another repository or a local                                                                              branch
   push              Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.
[ec2-user@ip-172-31-44-195 mygit]$ 7


GitHub Credentials
username : amareshvpatil1
passwrd: Rohi@7353

Git Token passing : git push https://<GITHUB_ACCESS_TOKEN>@github.com/<GITHUB_USERNAME>/<REPOSITORY_NAME>.git

git push https://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@github.com/amareshvpatil1/Devops_training.git
